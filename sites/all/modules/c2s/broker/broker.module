<?php
/*
*--------------------------------------------------------------------------------------------------------------------
*	MODULE NAME: 	BROKER MODULE
*	DATE WRITTEN:	14-SEP-2015
*	DEVELOPED BY:	ASHLEE MUNSHI
*	REVIEWED BY:	MR. ASHISH NAIK
*	REVIEW DATE:	
*--------------------------------------------------------------------------------------------------------------------
*/


/**
* CITY2SHORE NAVIGATION MENU
*/

function broker_menu() {
	
	$items['c2s/broker/add'] = array(
        'title'				=> 'Broker Enrollment Form',
		'page callback' 	=> 'drupal_get_form',
        'menu_name' 		=> 'menu-c2s-menu',
		'page arguments' 	=> array('c2s_broker_add'),
		'access callback' 	=> TRUE,
        'access arguments' 	=> array('C2S Broker Enrollment Form'),
	);
	
	$items['c2s/broker/view'] = array(
		'title' 			=> t('Broker View Form'),
		'page callback' 	=> 'c2s_broker_view',
		'access callback' 	=> TRUE,
	);
  
  	$items['c2s/broker/update'] = array(
		'title' => t('Broker View Form'),
    	'page callback' 	=> 'drupal_get_form',
		'page arguments' 	=> array('c2s_broker_update'),
		'access callback' 	=> TRUE,
	);
  
  	$items['c2s/broker/list'] = array(
		'title' 			=> t('List of Brokers'),
		'menu_name' 		=> 'menu-c2s-menu',
		'page callback' 	=> 'c2s_broker_list',
		'access callback' 	=> TRUE,

	);

	$items['c2s/broker/deactivate'] = array(
        'title'				=>'Broker Deactivate',
		'page callback' 	=> 'drupal_get_form',
		'page arguments' 	=> array('c2s_broker_deactivate'),
		'access callback' 	=> TRUE,
        'access arguments' 	=> array('Deactivate C2S Broker'),
	);

	$items['charity/autocomplete'] = array(
		'page callback' 	=> 'charity_autocomplete',
		'access arguments' 	=> array('Charity AutoComplete'),
		'type' 				=> MENU_CALLBACK
	);

	return $items;
}

/* -----------------------------------------------------------------------------------*/
// Access Permission
/* -----------------------------------------------------------------------------------*/

/*
function c2s_permission() {
  return array(
      
    'c2s Application' => array(
      'title' => 'c2s Application',
        ),

    'Claim List c2s Monthly Excess' => array(
      'title' => 'Claim List c2s Monthly Excess',
        ),
		
   );
}
 
*/

/**
* C2S MANAGEMENT APPLICATION FORM
* This Form is used for Submitting as well as Editing the c2s management Details 
*/
// ==================================================================================================
//                   FORMS INC
// ==================================================================================================

function c2s_broker_add($form, &$form_state) {
	include("form_inc/c2s_broker_add.inc");
	return $form;
}

function c2s_broker_edit($form, &$form_state) {
	include("form_inc/c2s_broker_edit.inc");
	return $form;
}

function c2s_broker_view($form) {
	$brokerage_id = arg(3);
	$build = array();
	$build['form_wrapper_start'] = array(
		'#type' => 'item',
		'#suffix' => '<div id="main-view-wrapper">',
	);

	$build['form_one'] = drupal_get_form('c2s_brokerage_edit_view');
	$result = db_query("SELECT broker_agent_id FROM c2s_broker_master WHERE brokerage_id = ".$brokerage_id." and status = 'A'");
	$broker_id = array();
	$n=0;
	foreach($result as $value){
		$n++; 
		$broker_id[$n] = $value->broker_agent_id;
	}
	$total_brokers = $n;
	
	for($i=1; $i<=$total_brokers; $i++){
		$build['form_'.$i] = drupal_get_form('c2s_broker_edit_view',$broker_id[$i],$i);
	}
	

	$build['form_wrapper_end'] = array(
		'#type' => 'item',
		'#suffix' => '</div>',
	);	
	return $build;
}

function c2s_broker_edit_view($form, &$form_state,$var,$i){
	$form_state['broker_id'] = $var;
	$form_state['form_id'] = $i;
	include("form_inc/c2s_broker_view.inc");
	return $form;
}





function c2s_brokerage_edit_view($form, &$form_state){
	include("form_inc/c2s_brokerage-edit-view.inc");
	return $form;
}



function c2s_broker_list() {
	include("page_inc/c2s_broker_list.inc");
	return $data;
}
function c2s_broker_deactivate() {
	include("submit_inc/c2s_broker_deactivate.inc");
	return $data;
}

// ==================================================================================================
//                   FORM SUBMITING FUNCTIONS   
// ==================================================================================================

function c2s_broker_add_submit($form,&$form_state){
		include("submit_inc/broker_add_submit.inc"); 
}
function c2s_broker_edit_view_submit($form,&$form_state){
		include("submit_inc/c2s_broker_update.inc"); 
}

// ==================================================================================================
//  				ADD MORE FUNCTIONS
// ==================================================================================================


function spower_add_more_callback($form, $form_state) {
  return $form['names_fieldset'];
}
function spower_add_more_callback_tabs($form, $form_state) {
  return $form['names_fieldset_tabs'];
}

/**
 * Submit handler for the "add-one-more" button.
 *
 * Increments the max counter and causes a rebuild.
 */
function spower_add_more_add_one($form, &$form_state) {
  $form_state['num_names']++;
  drupal_set_message($form_state['num_names']);
  $form_state['rebuild'] = TRUE;
}

/**
 * Submit handler for the "remove one" button.
 *
 * Decrements the max counter and causes a form rebuild.
 */
function spower_add_more_remove_one($form, &$form_state) {
  if ($form_state['num_names'] > 1) {
    $form_state['num_names']--;
  }
  $form_state['rebuild'] = TRUE;
}


function find_cities_callback_broker($form, $form_state) {
	$abc = $form_state['trigerring_element'];
	drupal_set_message('abc = '.$abc);
	return $form['names_fieldset']['city_'.$i];
}

function find_cities_callback_2($form, $form_state) {
	return $form['city_2'];
}

function find_zip_callback11($form, $form_state) {
	return $form['zip_code'];
}


function find_cities_callback_22($form, $form_state) {
	return $form['names_fieldset']['business_city_id_'.$i];
}

function find_zip_callback22($form, $form_state) {
	return $form['names_fieldset']['business_zip_code_'.$i];
}
function find_cities_callback_33($form, $form_state) {
	return $form['names_fieldset']['beneficiary_city_id_'.$i];
}

function find_zip_callback44($form, $form_state) {
	return $form['names_fieldset']['beneficiary_zip_code_'.$i];
}

function getPaperworkRequired(){
	$paperwork_options = array();
	$result_paperwork = db_query("SELECT paperwork_id, paperwork_document_name FROM c2s_required_paperwork ORDER BY 1");
	foreach($result_paperwork as $value){
		$paperwork_options[$value->paperwork_id]	=	$value->paperwork_document_name;
	}
	return $paperwork_options;
}

function getPaperworkSelected($brokerage_id){
	$paperwork_selected = array();
	$result_paperwork = db_query("SELECT paperwork_id, paperwork_document_name FROM c2s_required_paperwork 
								   WHERE paperwork_id IN (SELECT paperwork_id FROM c2s_brokerage_paperwork WHERE brokerage_id = ".$brokerage_id." )	
								   ORDER BY 1");
	foreach($result_paperwork as $value){
		$paperwork_selected[$value->paperwork_id]	=	$value->paperwork_document_name;
	}
	return $paperwork_selected;
}


function getCitiesBroker(){
	$city_options = array();
	$city_options[] = '-- Select --';
	$result_city = db_query("SELECT city FROM cities_extended ORDER BY 1 limit 1,10");
	foreach($result_city as $value){
		$city_options[$value->city]	=	$value->city;
	}
	return $city_options;
}


// ----------- Auto Complete Functions ------

function charity_autocomplete($string) {
  $matches = array();
  
  // Some fantasy DB table which holds cities
  $query = db_select('c2s_charity_org_master', 'c');

  // Select rows that match the string
  $return = $query
    ->fields('c', array('charity_organization_id','charity_org_name'))
    ->condition('c.charity_org_name', '%' . db_like($string) . '%', 'LIKE')
    ->range(0, 10)
    ->execute();
  
  // add matches to $matches  
  foreach ($return as $row) {
    $matches[$row->charity_org_name] = check_plain($row->charity_org_name);
  }
  
  // return for JS
  drupal_json_output($matches);
}

